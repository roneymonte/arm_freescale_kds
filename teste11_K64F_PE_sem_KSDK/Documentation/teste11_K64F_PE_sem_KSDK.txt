=============================================================================
List of generated methods in project: main

THIS TEXT DESCRIPTION IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
=============================================================================

Module "pin_mux"   (component PinSettings)
   - pin_mux_hardware_init -This method sets registers according routing settings. Call this method in user code to route 
                desired pins into peripherals. The method is useful for reinitialization HW after some routing changes.
   - pin_mux_configure_can_pins -CAN method sets registers according routing settings. Call this method code to route desired 
                pins into CAN0 peripheral.
   - pin_mux_configure_cmp_pins -CMP method sets registers according routing settings. Call this method code to route desired 
                pins into CMP0, CMP1, CMP2 peripherals.
   - pin_mux_configure_enet_pins -ENET method sets registers according routing settings. Call this method code to route desired 
                pins into ENET peripheral.
   - pin_mux_configure_gpio_pins -GPIO method sets registers according routing settings. Call this method code to route desired 
                pins into PTA, PTB, PTC, PTD, PTE peripherals.
   - pin_mux_configure_i2c_pins -I2C method sets registers according routing settings. Call this method code to route desired 
                pins into I2C0, I2C1, I2C2 peripherals.
   - pin_mux_configure_i2s_pins -I2S method sets registers according routing settings. Call this method code to route desired 
                pins into I2S0 peripheral.
   - pin_mux_configure_jtag_pins -JTAG method sets registers according routing settings. Call this method code to route desired 
                pins into JTAG peripheral.
   - pin_mux_configure_llwu_pins -LLWU method sets registers according routing settings. Call this method code to route desired 
                pins into LLWU peripheral.
   - pin_mux_configure_rtc_pins -RTC method sets registers according routing settings. Call this method code to route desired 
                pins into RTC peripheral.
   - pin_mux_configure_sdhc_pins -SDHC method sets registers according routing settings. Call this method code to route desired 
                pins into SDHC peripheral.
   - pin_mux_configure_spi_pins -SPI method sets registers according routing settings. Call this method code to route desired 
                pins into SPI0, SPI1, SPI2 peripherals.
   - pin_mux_configure_uart_pins -UART method sets registers according routing settings. Call this method code to route desired 
                pins into UART0, UART1, UART2, UART3, UART4, UART5 peripherals.

Module "LED_VERD"  (component LED)
   - LED_VERD_Init -Performs the LED driver initialization.
   - LED_VERD_Deinit -Deinitializes the driver
   - LED_VERD_On -This turns the LED on.
   - LED_VERD_Off -This turns the LED off.
   - LED_VERD_Neg -This negates/toggles the LED
   - LED_VERD_Get -This returns logical 1 in case the LED is on, 0 otherwise.
   - LED_VERD_Put -Turns the LED on or off.
   - LED_VERD_SetRatio16 -Method to specify the duty cycle. If using a PWM pin, this means the duty cycle is set. For On/off 
                pins, values smaller 0x7FFF means off, while values greater means on.

Module "LED_AZUL"  (component LED)
   - LED_AZUL_Init -Performs the LED driver initialization.
   - LED_AZUL_Deinit -Deinitializes the driver
   - LED_AZUL_On -This turns the LED on.
   - LED_AZUL_Off -This turns the LED off.
   - LED_AZUL_Neg -This negates/toggles the LED
   - LED_AZUL_Get -This returns logical 1 in case the LED is on, 0 otherwise.
   - LED_AZUL_Put -Turns the LED on or off.
   - LED_AZUL_SetRatio16 -Method to specify the duty cycle. If using a PWM pin, this means the duty cycle is set. For On/off 
                pins, values smaller 0x7FFF means off, while values greater means on.

Module "LED_VERM"  (component LED)
   - LED_VERM_Init -Performs the LED driver initialization.
   - LED_VERM_Deinit -Deinitializes the driver
   - LED_VERM_On -This turns the LED on.
   - LED_VERM_Off -This turns the LED off.
   - LED_VERM_Neg -This negates/toggles the LED
   - LED_VERM_Get -This returns logical 1 in case the LED is on, 0 otherwise.
   - LED_VERM_Put -Turns the LED on or off.
   - LED_VERM_SetRatio16 -Method to specify the duty cycle. If using a PWM pin, this means the duty cycle is set. For On/off 
                pins, values smaller 0x7FFF means off, while values greater means on.

Module "WAIT1"     (component Wait)
   - WAIT1_Wait10Cycles -Wait for 10 CPU cycles.
   - WAIT1_Wait100Cycles -Wait for 100 CPU cycles.
   - WAIT1_WaitCycles -Wait for a specified number of CPU cycles (16bit data type).
   - WAIT1_WaitLongCycles -Wait for a specified number of CPU cycles (32bit data type).
   - WAIT1_Waitms -Wait for a specified time in milliseconds.
   - WAIT1_Waitus -Wait for a specified time in microseconds.
   - WAIT1_Waitns -Wait for a specified time in nano seconds.
   - WAIT1_WaitOSms -If an RTOS is enabled, this routine will use a non-blocking wait method. Otherwise it will do a 
                busy/blocking wait.

Module "Cpu"       (component MK64FN1M0LL12)
   - Cpu_SetClockConfiguration -Calling of this method will cause the clock configuration change and reconfiguration of all 
                components according to the requested clock configuration setting.
   - Cpu_GetClockConfiguration -Returns the active clock configuration identifier. The method is automatically enabled if more 
                than one clock configuration is enabled in the component.

===================================================================================
